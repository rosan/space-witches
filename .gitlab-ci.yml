stages:
  - build
  - deploy stage
  - deploy prod

image: docker
services:
  - docker:dind

variables:
  ANSIBLE_IMAGE: $CI_REGISTRY/tom/tom-deployment:latest

before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

build site:
  stage: build
  script:
    - tar --exclude='./.*' --exclude='./site.tar.gz' -czf site.tar.gz .
  artifacts:
    paths:
      - site.tar.gz

deploy stage:
  stage: deploy stage
  script:
    - eval $(ssh-agent -a "$PWD"/ssh-agent-sock)
    - echo "$SSH_PRIVATE_KEY" | ssh-add -
    - >
        docker run
        --volume $SSH_AUTH_SOCK:/ssh-agent --env SSH_AUTH_SOCK=/ssh-agent
        --volume $PWD/site.tar.gz:/site.tar.gz
        $ANSIBLE_IMAGE
        ansible-playbook -i inventory stage-space-witches.yml
        --extra-vars "site_tarball=/site.tar.gz version_tag=$CI_COMMIT_SHA"
  after_script:
    - rm ssh-agent-sock

deploy prod:
  stage: deploy prod
  script:
    - eval $(ssh-agent -a "$PWD"/ssh-agent-sock)
    - echo "$SSH_PRIVATE_KEY" | ssh-add -
    - >
        docker run
        --volume $SSH_AUTH_SOCK:/ssh-agent --env SSH_AUTH_SOCK=/ssh-agent
        --volume $PWD/site.tar.gz:/site.tar.gz
        $ANSIBLE_IMAGE
        ansible-playbook -i inventory space-witches.yml 
        --extra-vars "site_tarball=/site.tar.gz version_tag=$CI_COMMIT_SHA"
  after_script:
    - rm ssh-agent-sock
  rules:
    - when: manual
